<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:SignalGoTest.Desktop.Converters"
             xmlns:cmd="clr-namespace:SignalGoTest.Desktop.Helpers"
             xmlns:self="clr-namespace:SignalGo.Shared.Models;assembly=SignalGo.Shared">
  <Application.Resources>
    <cmd:CommandsViewModel x:Key="CommandsViewModel"/>
  </Application.Resources>
  
  <Application.Styles>
    <StyleInclude Source="resm:Avalonia.Themes.Default.DefaultTheme.xaml?assembly=Avalonia.Themes.Default"/>
    <StyleInclude Source="resm:Avalonia.Themes.Default.Accents.BaseLight.xaml?assembly=Avalonia.Themes.Default"/>
    <Style Selector="Button">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Padding" Value="15,5,15,5"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="#449b70" CornerRadius="3">
            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <Style Selector="Button:pointerover">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="#4cac7d" CornerRadius="3">
            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <Style Selector="Button:pressed">
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="#2b5641" CornerRadius="3">
            <TextBlock Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <!--<Style Selector="TextBox">
      <Setter Property="Foreground" Value="Red"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Background="White" BorderBrush="#409b7c" BorderThickness="1" CornerRadius="3">
            <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>-->
    <Style Selector="TextBox">
      <Setter Property="Background" Value="White"/>
      <Setter Property="Foreground" Value="#3a3a3a"/>
      <Setter Property="BorderBrush" Value="#409b7c"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="4"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Name="border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
            <DockPanel Margin="{TemplateBinding Padding}">

              <TextBlock Name="floatingWatermark"
                         Foreground="{DynamicResource ThemeAccentBrush}"
                         FontSize="{DynamicResource FontSizeSmall}"
                         Text="{TemplateBinding Watermark}"
                         DockPanel.Dock="Top">
                <TextBlock.IsVisible>
                  <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="UseFloatingWatermark"/>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Text"
                             Converter="{x:Static StringConverters.NotNullOrEmpty}"/>
                  </MultiBinding>
                </TextBlock.IsVisible>
              </TextBlock>

              <DataValidationErrors>
                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                              VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">

                  <Panel>
                    <TextBlock Name="watermark"
                               Opacity="0.5"
                               Text="{TemplateBinding Watermark}"
                               IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.NullOrEmpty}}"/>
                    <TextPresenter Name="PART_TextPresenter"
                                   Text="{TemplateBinding Text, Mode=TwoWay}"
                                   CaretIndex="{TemplateBinding CaretIndex}"
                                   SelectionStart="{TemplateBinding SelectionStart}"
                                   SelectionEnd="{TemplateBinding SelectionEnd}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"/>
                  </Panel>
                </ScrollViewer>
              </DataValidationErrors>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter>
      <Setter Property="ContextMenu">
        <Setter.Value>
          <Template>
            <ContextMenu x:Name="contextMenu">
              <MenuItem Header="Cut" Command="{Binding CutCommand,Source={StaticResource CommandsViewModel}}" CommandParameter="{Binding ElementName=contextMenu}" />
              <MenuItem Header="Copy" Command="{Binding CopyCommand,Source={StaticResource CommandsViewModel}}" CommandParameter="{Binding ElementName=contextMenu}" />
              <MenuItem Header="Paste" Command="{Binding PasteCommand,Source={StaticResource CommandsViewModel}}" CommandParameter="{Binding ElementName=contextMenu}" />
              <MenuItem Header="Clear" Command="{Binding ClearCommand,Source={StaticResource CommandsViewModel}}" CommandParameter="{Binding ElementName=contextMenu}" />
              <!--<MenuItem Header="Select All" Command="{Binding SelctAllCommand,Source={StaticResource CommandsViewModel}}" CommandParameter="{Binding ElementName=contextMenu}" />-->
            </ContextMenu>
          </Template>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="TextBox.ReadOnly">
      <Setter Property="Background" Value="White"/>
      <Setter Property="IsReadOnly" Value="True"/>
      <Setter Property="Foreground" Value="#3a3a3a"/>
      <Setter Property="BorderBrush" Value="#409b7c"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Padding" Value="4"/>
      <Setter Property="Template">
        <ControlTemplate>
          <Border Name="border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <DockPanel Margin="{TemplateBinding Padding}">

              <TextBlock Name="floatingWatermark"
                         Foreground="{DynamicResource ThemeAccentBrush}"
                         FontSize="{DynamicResource FontSizeSmall}"
                         Text="{TemplateBinding Watermark}"
                         DockPanel.Dock="Top">
                <TextBlock.IsVisible>
                  <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="UseFloatingWatermark"/>
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                             Path="Text"
                             Converter="{x:Static StringConverters.NotNullOrEmpty}"/>
                  </MultiBinding>
                </TextBlock.IsVisible>
              </TextBlock>

              <DataValidationErrors>
                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                              VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">

                  <Panel>
                    <TextBlock Name="watermark"
                               Opacity="0.5"
                               Text="{TemplateBinding Watermark}"
                               IsVisible="{TemplateBinding Text, Converter={x:Static StringConverters.NullOrEmpty}}"/>
                    <TextPresenter Name="PART_TextPresenter"
                                   Text="{TemplateBinding Text, Mode=TwoWay}"
                                   CaretIndex="{TemplateBinding CaretIndex}"
                                   SelectionStart="{TemplateBinding SelectionStart}"
                                   SelectionEnd="{TemplateBinding SelectionEnd}"
                                   TextAlignment="{TemplateBinding TextAlignment}"
                                   TextWrapping="{TemplateBinding TextWrapping}"/>
                  </Panel>
                </ScrollViewer>
              </DataValidationErrors>
            </DockPanel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <!--<Style Selector="TreeViewItem">
      <Setter Property="DataTemplates">
        <ControlTemplate>
          <DataTemplate DataType="{x:Type self:WebApiDetailsInfo}" ItemsSource="{Binding Models}">
            <TextBlock Foreground="red" Text="{Binding}"/>
          </DataTemplate>
        </ControlTemplate>
      </Setter>
    </Style>-->
  </Application.Styles>
</Application>